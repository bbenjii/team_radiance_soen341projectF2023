Index: Sprint3/User_Stories_sprint3
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1)User Story 1: Calculate Mortgage Payments\n \nAs a homebuyer, I want to be able to compute monthly mortgage payments based on the loan amount, interest rate, as well as loan term.\n \nTasks for User Story 1:\n \nFrontend Development:\nCreate a user interface for entering loan amount, interest rate, and loan term.\nValidate user input to ensure the data entered is valid.\nDisplay the computed monthly mortgage payment.\n\nBackend Development:\nCreate an API endpoint to handle mortgage calculations.\nImplement the mortgage calculation logic based on the user's input.\nUnit test the mortgage calculation logic.\n\nTesting:\nPerform user testing to ensure the calculator works as expected.\nTest edge cases, such as invalid input values.\nFix any bugs or issues that arise during testing.\n\nDocumentation:\nUpdate the user documentation to include instructions on how to use the mortgage calculator.\n \n \n2) User Story 2: Save Mortgage Details\n \nAs a homebuyer, I want to be able to save the mortgage details for future reference.\n \nTasks for User Story 2:\n\nFrontend Development:\nAdd a \"Save\" button to the mortgage calculator interface.\nImplement the functionality to save mortgage details to the user's profile.\n\nBackend Development:\nCreate an API endpoint for saving mortgage details.\nStore the saved details in the database.\n\nTesting:\nTest the save functionality to ensure data is stored correctly.\nVerify that saved details are accessible from the user's profile.\n\nDocumentation:\nUpdate the user documentation to include information on how to save and access mortgage details.\n \n \n3)User Story 3: Implement Real-Time Updates\n \nAs a user, I want to receive real-time updates (i.e. notifications) for important events within the application to enhance my overall productivity.\n \nBackend Development:\nDevelop a notification system to trigger events and send notifications in real-time.\nIntegrate the notification system with relevant application events.\nEnsure secure and efficient handling of notifications.\n\nFrontend Development:\nCreate a user interface to display notifications to the user.\nImplement real-time updates in the user interface.\n\nTesting:\nTest the notification system for reliability and performance.\nConduct user testing to ensure notifications are delivered accurately and promptly.\n\nDocumentation:\nUpdate the user documentation to inform users about the new notification system\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sprint3/User_Stories_sprint3 b/Sprint3/User_Stories_sprint3
--- a/Sprint3/User_Stories_sprint3	(revision 634df831d2c2e092c2cbfcb0a022769f1187e6e1)
+++ b/Sprint3/User_Stories_sprint3	(date 1700931379854)
@@ -1,67 +1,73 @@
-1)User Story 1: Calculate Mortgage Payments
+User Story 1: Calculate Mortgage Payments
  
 As a homebuyer, I want to be able to compute monthly mortgage payments based on the loan amount, interest rate, as well as loan term.
  
 Tasks for User Story 1:
  
 Frontend Development:
-Create a user interface for entering loan amount, interest rate, and loan term.
-Validate user input to ensure the data entered is valid.
-Display the computed monthly mortgage payment.
+- Create a user interface for entering loan amount, interest rate, and loan term.
+- Validate user input to ensure the data entered is valid.
+- Display the computed monthly mortgage payment.
 
 Backend Development:
-Create an API endpoint to handle mortgage calculations.
-Implement the mortgage calculation logic based on the user's input.
-Unit test the mortgage calculation logic.
+- Create an API endpoint to handle mortgage calculations.
+- Implement the mortgage calculation logic based on the user's input.
+- Unit test the mortgage calculation logic.
 
 Testing:
-Perform user testing to ensure the calculator works as expected.
-Test edge cases, such as invalid input values.
-Fix any bugs or issues that arise during testing.
+- Perform user testing to ensure the calculator works as expected.
+- Test edge cases, such as invalid input values.
+- Fix any bugs or issues that arise during testing.
 
 Documentation:
-Update the user documentation to include instructions on how to use the mortgage calculator.
+- Update the user documentation to include instructions on how to use the mortgage calculator.
+ 
  
  
-2) User Story 2: Save Mortgage Details
+ 
+User Story 2: Save Mortgage Details
  
 As a homebuyer, I want to be able to save the mortgage details for future reference.
  
 Tasks for User Story 2:
 
 Frontend Development:
-Add a "Save" button to the mortgage calculator interface.
-Implement the functionality to save mortgage details to the user's profile.
-
-Backend Development:
-Create an API endpoint for saving mortgage details.
-Store the saved details in the database.
+- Add a "Save" button to the mortgage calculator interface.
+- Implement the functionality to save mortgage details to the user's profile.
+- Backend Development:
+- Create an API endpoint for saving mortgage details.
+- Store the saved details in the database.
 
 Testing:
-Test the save functionality to ensure data is stored correctly.
-Verify that saved details are accessible from the user's profile.
+- Test the save functionality to ensure data is stored correctly.
+- Verify that saved details are accessible from the user's profile.
 
 Documentation:
-Update the user documentation to include information on how to save and access mortgage details.
+- Update the user documentation to include information on how to save and access mortgage details.
+ 
  
- 
-3)User Story 3: Implement Real-Time Updates
+
+
+User Story 3: Implement Real-Time Updates
  
 As a user, I want to receive real-time updates (i.e. notifications) for important events within the application to enhance my overall productivity.
  
 Backend Development:
-Develop a notification system to trigger events and send notifications in real-time.
-Integrate the notification system with relevant application events.
-Ensure secure and efficient handling of notifications.
+- Develop a notification system to trigger events and send notifications in real-time.
+- Integrate the notification system with relevant application events.
+- Ensure secure and efficient handling of notifications.
 
 Frontend Development:
-Create a user interface to display notifications to the user.
-Implement real-time updates in the user interface.
+- Create a user interface to display notifications to the user.
+- Implement real-time updates in the user interface.
 
 Testing:
-Test the notification system for reliability and performance.
-Conduct user testing to ensure notifications are delivered accurately and promptly.
+- Test the notification system for reliability and performance.
+- Conduct user testing to ensure notifications are delivered accurately and promptly.
 
 Documentation:
-Update the user documentation to inform users about the new notification system
+- Update the user documentation to inform users about the new notification system.
+
+
+
 
